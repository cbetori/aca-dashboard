{"version":3,"sources":["serviceWorker.js","components/Investments/InvestmentsCard.js","containers/InvestmentsContainer.js","components/Cashflows/DistributionsCardComponent.js","components/Cashflows/DistoChart.js","components/Reusable/FunnelChart.js","components/Cashflows/DistroFunnelChart.js","containers/DistributionContainer.js","components/Main/Cards.js","components/Reusable/PieChart.js","components/Funds/FundsPieChart.js","containers/FundsSizeContainer.js","components/Funds/FundsComponent.js","components/Funds/FundsList.js","containers/FundsContainer.js","components/Main/Main.js","components/Layout/NavTop.js","components/Layout/NavSide.js","components/Investors/InvestorsTable.js","containers/InvestorsContainer.js","components/Reusable/TableSelect.js","components/Investors/InvestorDetail.js","containers/InvestorsInvIDContainer.js","App.js","AppContainer.js","actions/actions.js","reducers/reducers.js","store.js","state.js","index.js"],"names":["Boolean","window","location","hostname","match","InvestmentsCard","props","investmentInfo","investments","length","investmentGrossCapital","reduce","a","b","Gross_Capital","investmentNetCapital","Net_Capital","react_default","createElement","Fragment","col","span","card","statistic","title","value","precision","valueStyle","color","fontWeight","prefix","icon","type","suffix","connect","state","DistributionsCard","distroTotal","distributions","CF_Amount","DistroChart","datesList","map","row","moment","CF_Date","format","filter","index","self","indexOf","className","es6","width","height","data","tempArray","sort","x","spec_distro","gross_distro","tax_distro","comp_distro","i","Code_Name","Math","round","push","Spec_Distro","Gross_Distro","Comp_Distro","Tax_Distro","createNewCashflowObject","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","strokeDasharray","stroke","fillOpacity","fill","FunnelChartDash","COLORS","nameKey","entry","key","concat","position","font-weight","shortName","DistroFunnelChart","name","FunnelChart","mapState","DistroCardsContainer","DistroChartContainer","DistroFunnelContainer","Cards","style","background","padding","es_row","gutter","InvestmentsContainer","PieChartDash","label","legendType","FundsPieChart","PieChart","fundsSize","Funds","funds","Fund_ID","Feeder","FundsCard","fundsList","list","header","bordered","dataSource","minWidth","marginLeft","renderItem","item","Item","FundsCardResult","Main","console","log","layout","Main_Cards","FundsSizeContainer","Header","Layout","SubMenu","Menu","NavTop","current","handleClick","e","_this","setState","menu","maxHeight","display","lineHeight","onClick","this","selectedKeys","mode","fontSize","ItemGroup","React","Component","Sider","NavSide","collapsed","navWidth","onCollapse","maxWidth","minHeight","collapsible","theme","defaultSelectedKeys","react_router_dom","to","NavSide_SubMenu","InvestorsTable","searchText","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","confirm","clearFilters","input","ref","node","searchInput","placeholder","onChange","target","onPressEnter","handleSearch","marginBottom","es_button","size","marginRight","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","columns","Object","objectSpread","render","text","marginTop","table","investors","InvestorsTableResults","InvestorDetail","propsHolder","useSelector","propsDetails","investorsInvID","res","details","propsCash","cashflows","_useState","useState","_useState2","slicedToArray","tableData","tableDataSet","_useState3","_useState4","barChartData","barChartDataSet","_useState5","_useState6","barChartColumns","barChartColumnsSet","_useState7","_useState8","cardDataCash","cardDataCashSet","_useState9","_useState10","cardDataDetail","cardDataDetailSet","getCashFlowTotals","tempObject","Gross Distribution","Special Distribution","Composite Tax Distro","Tax Distribution","Tax Holdback","GP Promote","Management Fee","Servicing Fee","Commission","forEach","array","err","useEffect","JSON","parse","stringify","numeral","Edit","showModal","getTableData","tempArrayData","tempArrayColumns","count","cash","element","distrotype","amount","getBarChartData","getCardDataCash","getCardDataDetail","_useState11","_useState12","setVisible","_useState13","_useState14","confirmLoading","setConfirmLoading","Account_Name","InvID","CID","Inv_Type","Date_Inv","Date_Eliminate","modal","onOk","onCancel","InvestorDetailResult","Content","App","unlisten","history","listen","action","loadInvestorsInvID","loadFunds","loadFundsSize","loadInvestors","loadInvestments","loadDistributions","NavTop_NavTop","NavSide_NavSide","react_router","path","exact","component","withRouter","dispatch","fetch","then","response","json","fundsLoaded","fundsSizeLoaded","investmentsLoaded","distributionsLoaded","investorsLoaded","urlsplit","href","split","slice","investorsLoadedInvID","rootReducer","combineReducers","arguments","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","es","AppContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14f5fa3d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Statistic, Card, Col, Icon } from 'antd'\r\n\r\nfunction InvestmentsCard(props) {\r\n    let investmentInfo = props.investments.length\r\n    let investmentGrossCapital = props.investments.reduce((a, b)=>a + b.Gross_Capital,0)\r\n    let investmentNetCapital = props.investments.reduce((a, b)=>a + b.Net_Capital,0)\r\n  return (\r\n    <React.Fragment>\r\n        <Col span={3}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Current Investments\"\r\n                value={investmentInfo}\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix={<Icon type=\"user\"/>}\r\n                suffix=\"\"\r\n                />\r\n            </Card>\r\n        </Col>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Gross Capital\"\r\n                value={investmentGrossCapital}\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                />\r\n            </Card>\r\n        </Col>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Net Capital\"\r\n                value={investmentNetCapital}\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                />\r\n            </Card>\r\n        </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default InvestmentsCard;","import { connect } from \"react-redux\";\r\nimport InvestmentsCard from \"../components/Investments/InvestmentsCard\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    investments: state.investments\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InvestmentsCard);","import React from \"react\";\r\nimport { Statistic, Card, Col } from 'antd'\r\n\r\nfunction DistributionsCard(props) {\r\n    let distroTotal = props.distributions.reduce((a, b)=>a + b.CF_Amount,0)\r\n  return (\r\n    <React.Fragment>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Distributions Paid\"\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                value={distroTotal}\r\n                >\r\n                </Statistic>\r\n            </Card>\r\n        </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default DistributionsCard;","import React from \"react\";\r\nimport { AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area } from 'recharts'\r\nimport moment from 'moment'\r\n\r\nfunction DistroChart(props) {\r\n    //This is to get the unique date values as well as format the dates\r\n    const distinct = (value, index, self)=>{\r\n        return self.indexOf(value) === index\r\n    }\r\n    let distoDatesArray = props.distributions.map((row)=> moment(row.CF_Date).format('MM/YY'))\r\n    let datesList = distoDatesArray.filter(distinct)\r\n    function createNewCashflowObject(){\r\n        let tempArray = []\r\n        datesList = datesList.sort()\r\n        for (let x=0; x < datesList.length; x++){\r\n            let spec_distro = 0\r\n            let gross_distro = 0\r\n            let tax_distro = 0\r\n            let comp_distro = 0\r\n            for (let i=0; i < props.distributions.length; i++){\r\n                if(datesList[x] === moment(props.distributions[i].CF_Date).format('MM/YY')){\r\n                    switch(props.distributions[i].Code_Name){\r\n                        case \"Special Distribution\":\r\n                            spec_distro = spec_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        case \"Gross Distribution\":\r\n                            gross_distro = gross_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        case \"Tax Distribution\":\r\n                            tax_distro = tax_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        case \"Composite Tax Distro\":\r\n                            comp_distro = comp_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                    }\r\n                    \r\n                }\r\n            }\r\n                tempArray.push({\r\n                    Spec_Distro:spec_distro, \r\n                    Gross_Distro:gross_distro, \r\n                    Comp_Distro:comp_distro, \r\n                    Tax_Distro:tax_distro, \r\n                    CF_Date:datesList[x]\r\n                })\r\n        }\r\n        return tempArray\r\n    }\r\n\r\n  return (\r\n        <div className='autoMargin'>\r\n            <h3>Distribution History</h3>\r\n            <AreaChart width={1050} height={450} data={createNewCashflowObject()}\r\n            margin={{ top: 10, right: 50, left: 0, bottom: 0 }}>\r\n            <defs>\r\n                <linearGradient id=\"colorSD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#0088FE\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#0088FE\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorGD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#00C49F\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#00C49F\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorTD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#FF8042\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#FF8042\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorCD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#FFBB28\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#FFBB28\" stopOpacity={0}/>\r\n                </linearGradient>\r\n            </defs>\r\n            <XAxis dataKey=\"CF_Date\" />\r\n            <YAxis dataKey=\"Spec_Distro\"/>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Area type=\"monotone\" dataKey=\"Spec_Distro\" stroke=\"#0088FE\" fillOpacity={1} fill=\"url(#colorSD)\" />\r\n            <Area type=\"monotone\" dataKey=\"Gross_Distro\" stroke=\"#0088FE\" fillOpacity={1} fill=\"url(#colorGD)\" />\r\n            <Area type=\"monotone\" dataKey=\"Comp_Distro\" stroke=\"#FFBB28\" fillOpacity={1} fill=\"url(#colorCD)\" />\r\n            <Area type=\"monotone\" dataKey=\"Tax_Distro\" stroke=\"#FF8042\" fillOpacity={1} fill=\"url(#colorTD)\" />\r\n            </AreaChart>\r\n        </div>\r\n  );\r\n}\r\nexport default DistroChart;","import React from \"react\";\r\nimport { FunnelChart, Tooltip, Funnel, LabelList, Cell } from \"recharts\"\r\n\r\nfunction FunnelChartDash(props) {\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n  return (\r\n    <div className='autoMargin'>\r\n      <h3>{props.title}</h3>\r\n      <FunnelChart width={600} height={400} >\r\n          <Tooltip/>\r\n          <Funnel data={props.data} dataKey={props.dataKey} nameKey={props.nameKey}>\r\n            {props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)}\r\n            <LabelList position=\"center\" fill=\"#ffffff\" font-weight=\"bold\" dataKey={props.shortName}/>\r\n          </Funnel>\r\n      </FunnelChart >\r\n    </div>\r\n  );\r\n}\r\nexport default FunnelChartDash;","import React from \"react\";\r\nimport FunnelChartDash from '../Reusable/FunnelChart'\r\n\r\n//Proivde $ comparison between different distribution types\r\n\r\nfunction DistroFunnelChart(props) {\r\n    let data = () =>{\r\n        let spec_distro = 0\r\n        let gross_distro = 0\r\n        let tax_distro = 0\r\n        let comp_distro = 0\r\n        for(let i = 0; i < props.distributions.length; i++){\r\n            switch(props.distributions[i].Code_Name){\r\n                case \"Special Distribution\":\r\n                    spec_distro = spec_distro + Math.round(props.distributions[i].CF_Amount)\r\n                break\r\n                case \"Gross Distribution\":\r\n                    gross_distro = gross_distro + Math.round(props.distributions[i].CF_Amount)\r\n                break\r\n                case \"Tax Distribution\":\r\n                    tax_distro = tax_distro + Math.round(props.distributions[i].CF_Amount)\r\n                break\r\n                case \"Composite Tax Distro\":\r\n                    comp_distro = comp_distro + Math.round(props.distributions[i].CF_Amount)\r\n                break\r\n            }\r\n        }  \r\n        return data = [\r\n            {name:'Special Distribution', value: spec_distro, shortName:'Special'},\r\n            {name:'Gross Distribution', value: gross_distro, shortName:'Gross'},\r\n            {name:'Composite Distribution', value: comp_distro, shortName:'Composite'},\r\n            {name:'Tax Distribution', value: tax_distro,  shortName:'Tax'},\r\n\r\n        ]\r\n    }\r\n  return (\r\n    <React.Fragment>\r\n      <FunnelChartDash data={data()} title='Distribution by Type' dataKey='value' nameKey='name' shortName='shortName'/>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default DistroFunnelChart;","import { connect } from \"react-redux\";\r\nimport DistributionsCard from '../components/Cashflows/DistributionsCardComponent';\r\nimport DistroChart from '../components/Cashflows/DistoChart'\r\nimport DistroFunnelChart from '../components/Cashflows/DistroFunnelChart'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    distributions: state.distributions\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const DistroCardsContainer = mapState(DistributionsCard)\r\nexport const DistroChartContainer = mapState(DistroChart)\r\nexport const DistroFunnelContainer = mapState(DistroFunnelChart)","import React from \"react\";\r\nimport { Row } from 'antd'\r\nimport InvestmentsContainer from '../../containers/InvestmentsContainer'\r\nimport { DistroCardsContainer } from '../../containers/DistributionContainer'\r\n\r\nfunction Cards(){\r\n    return(\r\n        <div style={{ background: '#ECECEC', padding: '25px' }}>\r\n        <Row gutter={15}>\r\n            <InvestmentsContainer/>\r\n            <DistroCardsContainer/>\r\n        </Row>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Cell, Legend } from \"recharts\"\r\n\r\nfunction PieChartDash(props) {\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n  return (\r\n    <div>\r\n      <h3>{props.title}</h3>\r\n      <PieChart width={500} height={500} >\r\n          <Pie data={props.data} dataKey={props.dataKey} nameKey={props.nameKey} label legendType=\"square\"  fill=\"#000\">\r\n            {props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)}\r\n          </Pie>\r\n          <Legend/>\r\n      </PieChart >\r\n    </div>\r\n  );\r\n}\r\nexport default PieChartDash;","import React from \"react\";\r\nimport PieChartDash from '../Reusable/PieChart'\r\n\r\n//Proivde $ comparison between funds\r\nfunction FundsPieChart(props) {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PieChartDash data={props.fundsSize} title='Fund Size' dataKey='sum_of_gross_capital' nameKey='Fund_ID'/>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default FundsPieChart;\r\n\r\n\r\n\r\n//This works\r\n// import React from \"react\";\r\n// import { PieChart, Pie, Cell, Legend } from \"recharts\"\r\n\r\n// //Proivde $ comparison between funds\r\n// function FundsPieChart(props) {\r\n//   const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n//   return (\r\n//     <div>\r\n//       <h3>Active Funds Size</h3>\r\n//       <PieChart width={500} height={500} >\r\n//           <Pie data={props.fundsSize} dataKey=\"sum_of_gross_capital\" nameKey=\"Fund_ID\" label legendType=\"square\"  fill=\"#000\">\r\n//             {props.fundsSize.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)}\r\n//           </Pie>\r\n//           <Legend/>\r\n//       </PieChart >\r\n//     </div>\r\n//   );\r\n// }\r\n// export default FundsPieChart;\r\n\r\n\r\n    // let data = props.fundsSize.map( res => {Fund_id: res.Fund_ID, Sum: res.Sum_of_Gross_Capital.toLocalSting('en')})\r\n    // console.log(data)\r\n    // let datasets = [{data:[props.fundsSize.map(res=> res.sum_of_gross_capital)]}]\r\n    // let labels = [...props.fundsSize.keys()]\r\n    // let data = {datasets: datasets, labels: labels}\r\n    // console.log(data)\r\n    // let doughnutChart = new Chart({\r\n    //   type: 'doughnut',\r\n    //   data: data,\r\n    // })","import { connect } from \"react-redux\";\r\nimport FundsPieChart from \"../components/Funds/FundsPieChart\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    fundsSize: state.fundsSize\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(FundsPieChart);","import React from \"react\";\r\n\r\nfunction Funds(props) {\r\n  return (\r\n    <div>\r\n    <p className=\"App-intro\">{props.funds.map((row,index) => (\r\n        <li key={index}>  {row.Fund_ID}, {row.Feeder} </li>\r\n      ))}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default Funds;","import React from \"react\";\r\nimport { List } from 'antd'\r\n\r\nfunction FundsCard(props) {\r\n    const distinct = (value, index, self)=>{\r\n        return self.indexOf(value) === index\r\n    }\r\n    let fundsListArray = props.funds.map((row)=> row.Fund_ID)\r\n    let fundsList = fundsListArray.filter(distinct)\r\n\r\n  return (\r\n    <div>\r\n        <List\r\n        header={<div>Fund List</div>}\r\n        bordered\r\n        dataSource={fundsList}\r\n        style={{minWidth: 550, marginLeft: 200}}\r\n        renderItem={item => (\r\n            <List.Item>\r\n            {/* <Typography.Text mark>[ITEM]</Typography.Text>*/} {item} \r\n            </List.Item>\r\n        )}\r\n        />\r\n    </div>\r\n  );\r\n}\r\nexport default FundsCard;","import { connect } from \"react-redux\";\r\nimport Funds from \"../components/Funds/FundsComponent\";\r\nimport FundsCard from '../components/Funds/FundsList'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    funds: state.funds\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const FundsResult = mapState(Funds)\r\nexport const FundsCardResult = mapState(FundsCard)","import React from \"react\";\r\nimport { Layout } from 'antd'\r\nimport Cards from './Cards'\r\nimport FundsSizeContainer from '../../containers/FundsSizeContainer'\r\nimport {FundsCardResult} from '../../containers/FundsContainer'\r\nimport { DistroChartContainer, DistroFunnelContainer } from '../../containers/DistributionContainer'\r\n\r\n//const { Content } = Layout;\r\n\r\nfunction Main(props) {\r\n  console.log(props)\r\n  return (\r\n    <Layout>\r\n      <Cards/>\r\n      <h1 className='mainContainer'>Distribution Information</h1>\r\n      <div className='container'>\r\n        <DistroFunnelContainer/>\r\n        <DistroChartContainer/>\r\n      </div>\r\n      <h1 className='mainContainer'>Fund Information</h1>\r\n      <div className='container'>\r\n        <FundsSizeContainer/>\r\n        <FundsCardResult/>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\nexport default Main;","import React from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nconst { Header} = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class NavTop extends React.Component {\r\n  state = {\r\n    current: 'mail',\r\n  };\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Header style={{background: '#fff', padding: 0}}>\r\n        <Menu style={{maxHeight: 65, display: 'flex', lineHeight: '64px'}} onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\r\n          <Menu.Item key=\"logo\" style={{fontWeight: 'bolder', fontSize: 26}}>\r\n            <Icon type=\"code\" style={{fontSize: 22}} />\r\n            Dashboard\r\n          </Menu.Item>\r\n          <Menu.Item key=\"app\" >\r\n            <Icon type=\"appstore\" />\r\n            Navigation One\r\n          </Menu.Item>\r\n          <SubMenu\r\n            style={{position: \"fixed\", right: 0}}\r\n            title={\r\n              <span className=\"submenu-title-wrapper\">\r\n                <Icon type=\"user\" />\r\n                User\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.ItemGroup title=\"General\">\r\n              <Menu.Item key=\"setting:1\">System Settings</Menu.Item>\r\n              <Menu.Item key=\"setting:2\">Theme</Menu.Item>\r\n            </Menu.ItemGroup>\r\n            <Menu.ItemGroup title=\"User\">\r\n              <Menu.Item key=\"setting:3\">Settings</Menu.Item>\r\n              <Menu.Item key=\"setting:4\">Log Out</Menu.Item>\r\n            </Menu.ItemGroup>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Layout, Menu, Icon } from 'antd'\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nexport default class NavSide extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n    navWidth:  200\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    this.setState({ collapsed });\r\n    if (this.state.navWidth === 200){\r\n      this.setState({navWidth: 80})\r\n    }else{\r\n      this.setState({navWidth: 200})\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout  style={{maxWidth: this.state.navWidth, minHeight: \"100vh\"}}>\r\n        <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <Menu.Item className='navlink' key=\"1\">\r\n              <Icon type=\"pie-chart\" />\r\n              <span>\r\n                <Link className='navlink' to='/'> Home </Link>\r\n              </span>\r\n            </Menu.Item>\r\n            <SubMenu\r\n              key=\"sub1\"\r\n              title={\r\n                <span>\r\n                  <Icon type=\"user\" />\r\n                \r\n                    <Link className='navlink' to='/investors'> Investors </Link>\r\n             \r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"3\">Distributions</Menu.Item>\r\n              <Menu.Item key=\"4\">Transfer</Menu.Item>\r\n              <Menu.Item key=\"5\">Upload</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu\r\n              key=\"sub2\"\r\n              title={\r\n                <span>\r\n                  <Icon type=\"team\" />\r\n                  <span>Properties</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"6\">Pipeline</Menu.Item>\r\n              <Menu.Item key=\"8\">Performance</Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"2\">\r\n              <Icon type=\"desktop\" />\r\n              <span>Cashflows</span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table, Input, Button, Icon }  from 'antd';\r\n\r\nclass InvestorsTable extends Component{\r\n    state = {\r\n        searchText: '',\r\n      };\r\n      getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n      })\r\n\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n      }\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      }\r\n\r\n    render(){\r\n        let columns = [\r\n        {title: 'InvID', dataIndex:'InvID',  key: 'InvID', ...this.getColumnSearchProps('InvID'), render: text => <Link  to={\"/investors/invid/\"+text}>{text}</Link>},\r\n        {title: 'CID', dataIndex:'CID',  key: 'CID', ...this.getColumnSearchProps('CID'), render: text => <Link  to={\"/investors/cid/\"+text}>{text}</Link>},\r\n        {title: 'VID', dataIndex:'VID',  key: 'VID', ...this.getColumnSearchProps('VID')},\r\n        {title: 'SID', dataIndex:'SID', key: 'SID', ...this.getColumnSearchProps('SID')},\r\n        {title: 'Name', dataIndex:'Account_Name', key: 'Account_Name', ...this.getColumnSearchProps('Account_Name')},\r\n        {title: 'Feeder', dataIndex:'Feeder', key: 'Feeder', ...this.getColumnSearchProps('Feeder')},\r\n        {title: 'Inv_Type', dataIndex:'Inv_Type', key: 'Inv_Type', ...this.getColumnSearchProps('Inv_Type')},\r\n        {title: 'Date_Inv', dataIndex:'Date_Inv', key: 'Date_Inv', ...this.getColumnSearchProps('Date_Inv')},\r\n        {title: 'Date_Eliminate', dataIndex:'Date_Eliminate', key: 'Date_Eliminate', ...this.getColumnSearchProps('Date_Eliminate')},\r\n        {title: 'Gross_Capital', dataIndex:'Gross_Capital', key: 'Gross_Capital', ...this.getColumnSearchProps('Gross_Capital')},\r\n        {title: 'Net_Capital', dataIndex:'Net_Capital', key: 'Net_Capital', ...this.getColumnSearchProps('Net_Capital')}\r\n\r\n        ]\r\n        return(\r\n            <div style={{marginTop: 50}}>\r\n                <Table columns= {columns} dataSource={this.props.investors} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InvestorsTable","import { connect } from \"react-redux\";\r\nimport InvestorsTable from \"../components/Investors/InvestorsTable\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    investors: state.investors\r\n  };\r\n}\r\n\r\nexport const InvestorsTableResults = connect(mapStateToProps)(InvestorsTable);","import React from 'react'\r\nimport { Table, Button, Modal } from 'antd';\r\n\r\nclass TableSelect extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            //TAble\r\n            selectedRowKeys: [], // Check here to configure the default column\r\n            loading: false,\r\n        };\r\n    }\r\n//Table\r\n  start = () => {\r\n    this.setState({ loading: true });\r\n    // ajax request after empty completing\r\n    setTimeout(() => {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        loading: false,\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    const { loading, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length === 1;\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Button type=\"primary\" onClick={this.props.onClick} disabled={!hasSelected} loading={loading}>\r\n            Edit\r\n          </Button>\r\n          <span style={{ marginLeft: 8 }}>\r\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\r\n          </span>\r\n        </div>\r\n        <Table style={this.props.style} rowSelection={rowSelection} columns={this.props.columns} dataSource={this.props.dataSource} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableSelect","import React, {useState, useEffect} from \"react\";\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts'\r\nimport { Card, Input, Modal, Table, Button } from 'antd'\r\nimport { shallowEqual, useSelector} from 'react-redux'\r\nimport TableSelect from '../Reusable/TableSelect'\r\nimport moment from 'moment'\r\nimport numeral from 'numeral'\r\n\r\n\r\nfunction InvestorDetail (props) {\r\n//Props State\r\n    const propsHolder = useSelector( props => props)\r\n    const propsDetails = useSelector(props => props.investorsInvID.map(res =>res.details))\r\n    const propsCash = useSelector(props =>props.investorsInvID.map(res => res.cashflows))\r\n\r\n//Other State\r\n    const [tableData, tableDataSet] = useState([])\r\n    const [barChartData,barChartDataSet] = useState([])\r\n    const [barChartColumns,barChartColumnsSet] = useState([])\r\n    const [cardDataCash, cardDataCashSet] = useState([])\r\n    const [cardDataDetail, cardDataDetailSet] = useState([])\r\n\r\n    function getCardDataDetail(){\r\n        let tempObject = {}\r\n        for(let element in propsDetails[0]){\r\n            tempObject = propsDetails[element][0]\r\n        }\r\n        cardDataDetailSet(tempObject)\r\n    }\r\n\r\n    function getCardDataCash(){\r\n        let tempArray = []\r\n        let cash = getCashFlowTotals()\r\n        for(let element in cash){\r\n            cash[element] = numeral(cash[element]).format('$0,0')\r\n            tempArray.push(<p key={element}>{element}:  {cash[element]}</p>)\r\n        }\r\n        cardDataCashSet(tempArray)\r\n    }\r\n\r\n    function getCashFlowTotals(){\r\n        const tempObject ={\r\n            'Gross Distribution': 0, 'Special Distribution':0,'Composite Tax Distro':0, 'Tax Distribution':0,\r\n            'Tax Holdback':0, 'GP Promote':0, 'Management Fee':0, 'Servicing Fee':0, 'Commission':0, \r\n        }\r\n        propsCash.forEach(array => {\r\n            array.forEach((row, index)=>{\r\n                try{\r\n                    tempObject[row.Code_Name] += row.CF_Amount\r\n                }catch(err){}\r\n            })\r\n        })\r\n        return tempObject\r\n    }\r\n\r\n    let columns = [\r\n        {title: 'Edit', dataIndex:'Edit',  key: 'Edit', width: '10%'},\r\n        {title: 'InvID', dataIndex:'InvID',  key: 'InvID', width: '15%'},\r\n        {title: 'CID', dataIndex:'CID', key: 'CID', width: '15%'},\r\n        {title: 'Code_Name', dataIndex:'Code_Name',  key: 'Code_Name', width: '20%'},\r\n        {title: 'CF_Amount', dataIndex:'CF_Amount', key: 'CF_Amount', width: '20%'},\r\n        {title: 'CF_Date', dataIndex:'CF_Date',  key: 'CF_Date', width: '20%'},\r\n    ]   \r\n    function getTableData(){\r\n        let tempArray = []\r\n        const cashArray = JSON.parse(JSON.stringify(propsCash))\r\n        cashArray.forEach(array => {\r\n            array.forEach((row, index)=>{\r\n                row.CF_Date = moment(row.CF_Date).format('MM/DD/YYYY')\r\n                row.CF_Amount = numeral(row.CF_Amount).format('$0,0')\r\n                row.Edit= (<Button type=\"primary\" key={index} onClick={showModal}>Edit</Button>)\r\n                tempArray.push(row)\r\n            })\r\n        })\r\n        tableDataSet(tempArray)\r\n    }\r\n\r\n    function getBarChartData(){\r\n         //Create cashflow total card. Create array to hold barchart data. Create array to hold <Bar> tags.  \r\n        const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042',  '#FF8042', '#FF8042', '#FF8042', '#FF8042', '#FF8042'];\r\n        let tempArrayData = []\r\n        let tempArrayColumns =[]\r\n        let count = 0\r\n        let cash = getCashFlowTotals()\r\n        for(let element in cash){\r\n            if(cash[element] > 0 ){\r\n                tempArrayData.push({distrotype: element, amount: cash[element]})\r\n                tempArrayData[count][element] = cash[element]\r\n                tempArrayColumns.push(<Bar key={element} dataKey={element} fill={COLORS[count]}/>)\r\n                    count += 1\r\n            }\r\n        }\r\n        barChartColumnsSet(tempArrayColumns)\r\n        barChartDataSet(tempArrayData)\r\n    }\r\n \r\n    useEffect(()=>{\r\n        getCashFlowTotals()\r\n        getTableData()\r\n        getBarChartData()\r\n        getCardDataCash()\r\n        getCardDataDetail()\r\n        console.log('x')\r\n    },[propsHolder]) \r\n\r\n    //Modal\r\n        const [visible, setVisible]= useState(false)\r\n        const [confirmLoading, setConfirmLoading]= useState(false)\r\n        \r\n        function showModal(){\r\n            setVisible(true)\r\n        };\r\n\r\n        function handleOk () {\r\n            setConfirmLoading(false)\r\n            setTimeout(() => {\r\n                setVisible(false)\r\n                setConfirmLoading(false)\r\n            }, 2000);\r\n        };\r\n\r\n        function handleCancel () {\r\n            setVisible(false)\r\n          };\r\n\r\n        return(\r\n            <div style={{background: '#ECECEC'}}>\r\n                <div style={{display: 'flex',padding: '30px' }}>\r\n                    <Card title={cardDataDetail.Account_Name} bordered={false} style={{ width: 300, margin:25 }}>\r\n                        <p>InvId:           {cardDataDetail.InvID}</p>\r\n                        <p>CID:             {cardDataDetail.CID}</p>\r\n                        <p>Feeder:          {cardDataDetail.Feeder}</p>\r\n                        <p>Inv Type:        {cardDataDetail.Inv_Type}</p>\r\n                        <p>Gross Capital:   {numeral(cardDataDetail.Gross_Capital).format('$0,0')}</p>\r\n                        <p>Net Capital:     {numeral(cardDataDetail.Net_Capital).format('$0,0')}</p>\r\n                        <p>Start Date:      {moment(cardDataDetail.Date_Inv).format('MM/DD/YYYY')}</p>\r\n                        <p>End Date:        {moment(cardDataDetail.Date_Eliminate).format('MM/DD/YYYY')}</p>\r\n                    </Card>\r\n                    <br/>\r\n                    <Card title='Cashflows' bordered={false} style={{ width: 300, margin:25 }}>\r\n                        {cardDataCash}\r\n                    </Card>\r\n                    <BarChart\r\n                        width={900}\r\n                        height={500}\r\n                        data={barChartData}\r\n                        margin={{\r\n                        top: 25, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"distrotype\" />\r\n                        <YAxis dataKey=\"amount\"/>\r\n                        <Tooltip />\r\n                        {barChartColumns}\r\n                    </BarChart>\r\n                </div>\r\n                <Modal\r\n                    title=\"Title\"\r\n                    visible={visible}\r\n                    onOk={handleOk}\r\n                    confirmLoading={confirmLoading}\r\n                    onCancel={handleCancel}\r\n                >\r\n\r\n                </Modal>\r\n                    <Table style={{marginRight: 75, background: '#f1f3f5'}} columns= {columns} dataSource={tableData} />\r\n                    {/* <Table onClick={showModal} style={{marginRight: 75, background: '#f1f3f5'}} columns= {columns} dataSource={tableData} /> */}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default InvestorDetail","import { connect } from \"react-redux\";\r\nimport InvestorDetail from \"../components/Investors/InvestorDetail\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    investorsInvID: state.investorsInvID\r\n  };\r\n}\r\n\r\nexport const InvestorDetailResult = connect(mapStateToProps)(InvestorDetail);","import React, { Component } from \"react\";\r\nimport { withRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout} from \"antd\";\r\nimport Main from \"./components/Main/Main\";\r\nimport NavTop from \"./components/Layout/NavTop\";\r\nimport NavSide from \"./components/Layout/NavSide\";\r\nimport { InvestorsTableResults } from \"./containers/InvestorsContainer\"\r\nimport { FundsCardResult } from \"./containers/FundsContainer\";\r\nimport { InvestorDetailResult } from './containers/InvestorsInvIDContainer'\r\n\r\nconst { Content} = Layout;\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.unlisten = this.props.history.listen((location, action) => {\r\n      this.props.loadInvestorsInvID();\r\n    });\r\n    this.props.loadFunds();\r\n    this.props.loadFundsSize();\r\n    this.props.loadInvestors();\r\n    this.props.loadInvestments();\r\n    this.props.loadDistributions();\r\n    this.props.loadInvestorsInvID();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlisten();\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n          <NavTop />\r\n          <div id='container' style={{display: 'flex'}}>\r\n            <NavSide />\r\n            <Switch>\r\n              <Content style={{marginLeft: 10}}>\r\n                <Route path=\"/\" exact component={Main} />\r\n                <Route path=\"/funds\" component={FundsCardResult} />\r\n                <Route path=\"/investors\" exact component={InvestorsTableResults} />\r\n                <Route path=\"/investors/invid/:id\" component={InvestorDetailResult} />\r\n              </Content>\r\n            </Switch>\r\n          </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import App from './App'\r\nimport './App.css'\r\nimport { connect } from 'react-redux'\r\nimport {loadFunds, loadFundsSize, loadInvestments, loadDistributions,loadInvestors, loadInvestorsInvID} from \"./actions/actions\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    loadFunds: function () {\r\n      dispatch(loadFunds())\r\n    },\r\n    loadFundsSize: function () {\r\n      dispatch(loadFundsSize())\r\n    },\r\n    loadInvestments: function () {\r\n      dispatch(loadInvestments())\r\n    },\r\n    loadDistributions: function () {\r\n      dispatch(loadDistributions())\r\n    },\r\n    loadInvestors: function () {\r\n      dispatch(loadInvestors())\r\n    },\r\n    loadInvestorsInvID: function () {\r\n      dispatch(loadInvestorsInvID())\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(App)","export function loadFunds() {\r\n    return function (dispatch) {\r\n      fetch(\"http://localhost:3001/funds\")\r\n      .then( (response) => {\r\n        return response.json();\r\n      }).then((res) => {\r\n        dispatch(fundsLoaded(res));\r\n      });\r\n    };\r\n  }\r\n  function fundsLoaded(res) {\r\n    return {\r\n      type: \"FUNDS_LOADED\",\r\n      value: res\r\n    };\r\n  }\r\n\r\nexport function loadFundsSize() {\r\n  return function (dispatch) {\r\n    fetch(\"http://localhost:3001/funds-size\")\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(fundsSizeLoaded(res));\r\n    });\r\n  };\r\n}\r\nfunction fundsSizeLoaded(res) {\r\n  return {\r\n    type: \"FUNDS_SIZE_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function loadInvestments() {\r\n  return function (dispatch) {\r\n    fetch(\"http://localhost:3001/investments\")\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(investmentsLoaded(res));\r\n    });\r\n  };\r\n}\r\nfunction investmentsLoaded(res) {\r\n  return {\r\n    type: \"INVESTMENTS_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function loadDistributions() {\r\n  return function (dispatch) {\r\n    fetch(\"http://localhost:3001/cashflows/distributions\")\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(distributionsLoaded(res));\r\n    });\r\n  };\r\n}\r\nfunction distributionsLoaded(res) {\r\n  return {\r\n    type: \"DISTRIBUTIONS_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function loadInvestors() {\r\n  return function (dispatch) {\r\n    fetch(\"http://localhost:3001/investors\")\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(investorsLoaded(res));\r\n    });\r\n  };\r\n}\r\nfunction investorsLoaded(res) {\r\n  return {\r\n    type: \"INVESTORS_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function loadInvestorsInvID() {\r\n  let url = window.location.href\r\n  var urlsplit = url.split(\"/\").slice(-1)[0];\r\n  return function (dispatch) {\r\n    fetch(\"http://localhost:3001/investors/invid/\"+urlsplit)\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(investorsLoadedInvID(res));\r\n    });\r\n  };\r\n}\r\nfunction investorsLoadedInvID(res) {\r\n  return {\r\n    type: \"INVESTORS_INVID_LOADED\",\r\n    value: res\r\n  };\r\n}","import {combineReducers} from \"redux\";\r\n\r\nfunction funds(state = [], action) {\r\n  if (action.type === \"FUNDS_LOADED\") {\r\n    return action.value;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction fundsSize(state = [], action) {\r\n  if (action.type === \"FUNDS_SIZE_LOADED\") {\r\n    return action.value;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction investments(state =[], action){\r\n  if (action.type === 'INVESTMENTS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction distributions(state =[], action){\r\n  if (action.type === 'DISTRIBUTIONS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction investors(state =[], action){\r\n  if (action.type === 'INVESTORS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction investorsInvID(state =[], action){\r\n  if (action.type === 'INVESTORS_INVID_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    funds, fundsSize, investments, distributions, investors, investorsInvID\r\n  });\r\n  export default rootReducer;","import state from \"./state\";\r\nimport reducers from \"./reducers/reducers\";\r\nimport {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n typeof window === \"object\" &&\r\n window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n   \r\nconst enhancer = composeEnhancers(\r\n applyMiddleware(thunk)\r\n);\r\nconst store = createStore(reducers,state,enhancer);\r\nexport default store;","export default {\r\n    funds: [],\r\n    fundsSize: [],\r\n    investments: [],\r\n    distributions: [],\r\n    investors: [],\r\n    investorsInvID: []\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css'\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport AppContainer from './AppContainer'\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <BrowserRouter>\r\n        <AppContainer/>\r\n    </BrowserRouter>\r\n</Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}